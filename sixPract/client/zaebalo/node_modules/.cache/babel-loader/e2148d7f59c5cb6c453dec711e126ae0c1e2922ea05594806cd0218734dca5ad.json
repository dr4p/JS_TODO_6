{"ast":null,"code":"import { useSlotId as $m1DSs$useSlotId, filterDOMProps as $m1DSs$filterDOMProps } from \"@react-aria/utils\";\nimport { focusSafely as $m1DSs$focusSafely } from \"@react-aria/focus\";\nimport { useRef as $m1DSs$useRef, useEffect as $m1DSs$useEffect } from \"react\";\nimport { useOverlayFocusContain as $m1DSs$useOverlayFocusContain } from \"@react-aria/overlays\";\nfunction $40df3f8667284809$export$d55e7ee900f34e93(props, ref) {\n  let {\n    role = 'dialog'\n  } = props;\n  let titleId = $m1DSs$useSlotId();\n  titleId = props['aria-label'] ? undefined : titleId;\n  let isRefocusing = $m1DSs$useRef(false);\n  // Focus the dialog itself on mount, unless a child element is already focused.\n  $m1DSs$useEffect(() => {\n    if (ref.current && !ref.current.contains(document.activeElement)) {\n      $m1DSs$focusSafely(ref.current);\n      // Safari on iOS does not move the VoiceOver cursor to the dialog\n      // or announce that it has opened until it has rendered. A workaround\n      // is to wait for half a second, then blur and re-focus the dialog.\n      let timeout = setTimeout(() => {\n        if (document.activeElement === ref.current) {\n          isRefocusing.current = true;\n          ref.current.blur();\n          $m1DSs$focusSafely(ref.current);\n          isRefocusing.current = false;\n        }\n      }, 500);\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [ref]);\n  $m1DSs$useOverlayFocusContain();\n  // We do not use aria-modal due to a Safari bug which forces the first focusable element to be focused\n  // on mount when inside an iframe, no matter which element we programmatically focus.\n  // See https://bugs.webkit.org/show_bug.cgi?id=211934.\n  // useModal sets aria-hidden on all elements outside the dialog, so the dialog will behave as a modal\n  // even without aria-modal on the dialog itself.\n  return {\n    dialogProps: {\n      ...$m1DSs$filterDOMProps(props, {\n        labelable: true\n      }),\n      role: role,\n      tabIndex: -1,\n      'aria-labelledby': props['aria-labelledby'] || titleId,\n      // Prevent blur events from reaching useOverlay, which may cause\n      // popovers to close. Since focus is contained within the dialog,\n      // we don't want this to occur due to the above useEffect.\n      onBlur: e => {\n        if (isRefocusing.current) e.stopPropagation();\n      }\n    },\n    titleProps: {\n      id: titleId\n    }\n  };\n}\nexport { $40df3f8667284809$export$d55e7ee900f34e93 as useDialog };","map":{"version":3,"names":["$40df3f8667284809$export$d55e7ee900f34e93","props","ref","role","titleId","$m1DSs$useSlotId","undefined","isRefocusing","$m1DSs$useRef","$m1DSs$useEffect","current","contains","document","activeElement","$m1DSs$focusSafely","timeout","setTimeout","blur","clearTimeout","$m1DSs$useOverlayFocusContain","dialogProps","$m1DSs$filterDOMProps","labelable","tabIndex","onBlur","e","stopPropagation","titleProps","id"],"sources":["C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\dialog\\dist\\packages\\@react-aria\\dialog\\src\\index.ts","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\dialog\\dist\\packages\\@react-aria\\dialog\\src\\useDialog.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nexport {useDialog} from './useDialog';\nexport type {AriaDialogProps} from '@react-types/dialog';\nexport type {DialogAria} from './useDialog';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaDialogProps} from '@react-types/dialog';\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {filterDOMProps, useSlotId} from '@react-aria/utils';\nimport {focusSafely} from '@react-aria/focus';\nimport {RefObject, useEffect, useRef} from 'react';\nimport {useOverlayFocusContain} from '@react-aria/overlays';\n\nexport interface DialogAria {\n  /** Props for the dialog container element. */\n  dialogProps: DOMAttributes,\n\n  /** Props for the dialog title element. */\n  titleProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a dialog component.\n * A dialog is an overlay shown above other content in an application.\n */\nexport function useDialog(props: AriaDialogProps, ref: RefObject<FocusableElement>): DialogAria {\n  let {role = 'dialog'} = props;\n  let titleId = useSlotId();\n  titleId = props['aria-label'] ? undefined : titleId;\n\n  let isRefocusing = useRef(false);\n\n  // Focus the dialog itself on mount, unless a child element is already focused.\n  useEffect(() => {\n    if (ref.current && !ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n\n      // Safari on iOS does not move the VoiceOver cursor to the dialog\n      // or announce that it has opened until it has rendered. A workaround\n      // is to wait for half a second, then blur and re-focus the dialog.\n      let timeout = setTimeout(() => {\n        if (document.activeElement === ref.current) {\n          isRefocusing.current = true;\n          ref.current.blur();\n          focusSafely(ref.current);\n          isRefocusing.current = false;\n        }\n      }, 500);\n\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [ref]);\n\n  useOverlayFocusContain();\n\n  // We do not use aria-modal due to a Safari bug which forces the first focusable element to be focused\n  // on mount when inside an iframe, no matter which element we programmatically focus.\n  // See https://bugs.webkit.org/show_bug.cgi?id=211934.\n  // useModal sets aria-hidden on all elements outside the dialog, so the dialog will behave as a modal\n  // even without aria-modal on the dialog itself.\n  return {\n    dialogProps: {\n      ...filterDOMProps(props, {labelable: true}),\n      role,\n      tabIndex: -1,\n      'aria-labelledby': props['aria-labelledby'] || titleId,\n      // Prevent blur events from reaching useOverlay, which may cause\n      // popovers to close. Since focus is contained within the dialog,\n      // we don't want this to occur due to the above useEffect.\n      onBlur: e => {\n        if (isRefocusing.current) {\n          e.stopPropagation();\n        }\n      }\n    },\n    titleProps: {\n      id: titleId\n    }\n  };\n}\n"],"mappings":";;;;SC+BgBA,yCAASA,CAACC,KAAsB,EAAEC,GAAgC,EAAc;EAC9F,IAAI;IAACC,IAAI,GAAG;EAAQ,CAAC,GAAGF,KAAK;EAC7B,IAAIG,OAAO,GAAGC,gBAAS;EACvBD,OAAO,GAAGH,KAAK,CAAC,YAAY,IAAIK,SAAS,GAAGF,OAAO;EAEnD,IAAIG,YAAY,GAAGC,aAAM,CAAC,KAAK;EAE/B;EACAC,gBAAS,OAAO;IACd,IAAIP,GAAG,CAACQ,OAAO,KAAKR,GAAG,CAACQ,OAAO,CAACC,QAAQ,CAACC,QAAQ,CAACC,aAAa,GAAG;MAChEC,kBAAW,CAACZ,GAAG,CAACQ,OAAO;MAEvB;MACA;MACA;MACA,IAAIK,OAAO,GAAGC,UAAU,OAAO;QAC7B,IAAIJ,QAAQ,CAACC,aAAa,KAAKX,GAAG,CAACQ,OAAO,EAAE;UAC1CH,YAAY,CAACG,OAAO,GAAG,IAAI;UAC3BR,GAAG,CAACQ,OAAO,CAACO,IAAI;UAChBH,kBAAW,CAACZ,GAAG,CAACQ,OAAO;UACvBH,YAAY,CAACG,OAAO,GAAG,KAAK;QAC9B;MACF,CAAC,EAAE,GAAG;MAEN,OAAM,MAAO;QACXQ,YAAY,CAACH,OAAO;MACtB,CAAC;IACH;EACF,CAAC,EAAE,CAACb,GAAG,CAAC;EAERiB,6BAAsB;EAEtB;EACA;EACA;EACA;EACA;EACA,OAAO;IACLC,WAAW,EAAE;SACRC,qBAAc,CAACpB,KAAK,EAAE;QAACqB,SAAS,EAAE;MAAI,CAAC;YAC1CnB,IAAI;MACJoB,QAAQ,EAAE,EAAE;MACZ,iBAAiB,EAAEtB,KAAK,CAAC,iBAAiB,KAAKG,OAAO;MACtD;MACA;MACA;MACAoB,MAAM,EAAEC,CAAC,IAAI;QACX,IAAIlB,YAAY,CAACG,OAAO,EACtBe,CAAC,CAACC,eAAe;MAErB;IACF,CAAC;IACDC,UAAU,EAAE;MACVC,EAAE,EAAExB;IACN;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}