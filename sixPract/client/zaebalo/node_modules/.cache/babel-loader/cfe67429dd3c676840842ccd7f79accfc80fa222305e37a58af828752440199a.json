{"ast":null,"code":"import { useGridRowGroup as $lJcFS$useGridRowGroup, useGrid as $lJcFS$useGrid, GridKeyboardDelegate as $lJcFS$GridKeyboardDelegate, useGridCell as $lJcFS$useGridCell, useGridRow as $lJcFS$useGridRow, useGridSelectionCheckbox as $lJcFS$useGridSelectionCheckbox } from \"@react-aria/grid\";\nimport { announce as $lJcFS$announce } from \"@react-aria/live-announcer\";\nimport { useId as $lJcFS$useId, useDescription as $lJcFS$useDescription, useUpdateEffect as $lJcFS$useUpdateEffect, mergeProps as $lJcFS$mergeProps, isAndroid as $lJcFS$isAndroid, focusWithoutScrolling as $lJcFS$focusWithoutScrolling } from \"@react-aria/utils\";\nimport { useMemo as $lJcFS$useMemo, useRef as $lJcFS$useRef, useCallback as $lJcFS$useCallback } from \"react\";\nimport { useCollator as $lJcFS$useCollator, useLocale as $lJcFS$useLocale, useLocalizedStringFormatter as $lJcFS$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useFocusable as $lJcFS$useFocusable, focusSafely as $lJcFS$focusSafely } from \"@react-aria/focus\";\nimport { usePress as $lJcFS$usePress, useKeyboard as $lJcFS$useKeyboard, useMove as $lJcFS$useMove } from \"@react-aria/interactions\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nconst $2140fb2337097f2d$export$552312adfd451dab = new WeakMap();\nfunction $2140fb2337097f2d$var$normalizeKey(key) {\n  if (typeof key === 'string') return key.replace(/\\s*/g, '');\n  return '' + key;\n}\nfunction $2140fb2337097f2d$export$37cd4213f2ad742e(state, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error('Unknown grid');\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\nfunction $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey) {\n  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);\n  if (!gridId) throw new Error('Unknown grid');\n  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(rowKey)}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;\n}\nfunction $2140fb2337097f2d$export$85069b70317f543(state, rowKey) {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey => $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey)).join(' ');\n}\nvar $ae7e9c471762b4d3$exports = {};\nvar $ce3de3ff2fd66848$exports = {};\n$ce3de3ff2fd66848$exports = {\n  \"ascending\": `تصاعدي`,\n  \"ascendingSort\": args => `ترتيب حسب العمود ${args.columnName} بترتيب تصاعدي`,\n  \"columnSize\": args => `${args.value} بالبكسل`,\n  \"descending\": `تنازلي`,\n  \"descendingSort\": args => `ترتيب حسب العمود ${args.columnName} بترتيب تنازلي`,\n  \"select\": `تحديد`,\n  \"selectAll\": `تحديد الكل`,\n  \"sortable\": `عمود قابل للترتيب`\n};\nvar $cb80dcce530985b9$exports = {};\n$cb80dcce530985b9$exports = {\n  \"ascending\": `възходящ`,\n  \"ascendingSort\": args => `сортирано по колона ${args.columnName} във възходящ ред`,\n  \"columnSize\": args => `${args.value} пиксела`,\n  \"descending\": `низходящ`,\n  \"descendingSort\": args => `сортирано по колона ${args.columnName} в низходящ ред`,\n  \"select\": `Изберете`,\n  \"selectAll\": `Изберете всичко`,\n  \"sortable\": `сортираща колона`\n};\nvar $68ac86749db4c0fb$exports = {};\n$68ac86749db4c0fb$exports = {\n  \"ascending\": `vzestupně`,\n  \"ascendingSort\": args => `řazeno vzestupně podle sloupce ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixelů`,\n  \"descending\": `sestupně`,\n  \"descendingSort\": args => `řazeno sestupně podle sloupce ${args.columnName}`,\n  \"select\": `Vybrat`,\n  \"selectAll\": `Vybrat vše`,\n  \"sortable\": `sloupec s možností řazení`\n};\nvar $9a6cbac08487e661$exports = {};\n$9a6cbac08487e661$exports = {\n  \"ascending\": `stigende`,\n  \"ascendingSort\": args => `sorteret efter kolonne ${args.columnName} i stigende rækkefølge`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `faldende`,\n  \"descendingSort\": args => `sorteret efter kolonne ${args.columnName} i faldende rækkefølge`,\n  \"select\": `Vælg`,\n  \"selectAll\": `Vælg alle`,\n  \"sortable\": `sorterbar kolonne`\n};\nvar $c963661d89486e72$exports = {};\n$c963661d89486e72$exports = {\n  \"ascending\": `aufsteigend`,\n  \"ascendingSort\": args => `sortiert nach Spalte ${args.columnName} in aufsteigender Reihenfolge`,\n  \"columnSize\": args => `${args.value} Pixel`,\n  \"descending\": `absteigend`,\n  \"descendingSort\": args => `sortiert nach Spalte ${args.columnName} in absteigender Reihenfolge`,\n  \"select\": `Auswählen`,\n  \"selectAll\": `Alles auswählen`,\n  \"sortable\": `sortierbare Spalte`\n};\nvar $ac03861c6e8605f4$exports = {};\n$ac03861c6e8605f4$exports = {\n  \"ascending\": `αύξουσα`,\n  \"ascendingSort\": args => `διαλογή ανά στήλη ${args.columnName} σε αύξουσα σειρά`,\n  \"columnSize\": args => `${args.value} pixel`,\n  \"descending\": `φθίνουσα`,\n  \"descendingSort\": args => `διαλογή ανά στήλη ${args.columnName} σε φθίνουσα σειρά`,\n  \"select\": `Επιλογή`,\n  \"selectAll\": `Επιλογή όλων`,\n  \"sortable\": `Στήλη διαλογής`\n};\nvar $09e6b82e0d6e466a$exports = {};\n$09e6b82e0d6e466a$exports = {\n  \"select\": `Select`,\n  \"selectAll\": `Select All`,\n  \"sortable\": `sortable column`,\n  \"ascending\": `ascending`,\n  \"descending\": `descending`,\n  \"ascendingSort\": args => `sorted by column ${args.columnName} in ascending order`,\n  \"descendingSort\": args => `sorted by column ${args.columnName} in descending order`,\n  \"columnSize\": args => `${args.value} pixels`\n};\nvar $8cc39eb66c2bf220$exports = {};\n$8cc39eb66c2bf220$exports = {\n  \"ascending\": `de subida`,\n  \"ascendingSort\": args => `ordenado por columna ${args.columnName} en orden de subida`,\n  \"columnSize\": args => `${args.value} píxeles`,\n  \"descending\": `de bajada`,\n  \"descendingSort\": args => `ordenado por columna ${args.columnName} en orden de bajada`,\n  \"select\": `Seleccionar`,\n  \"selectAll\": `Seleccionar todos`,\n  \"sortable\": `columna ordenable`\n};\nvar $4e11db3c25a38112$exports = {};\n$4e11db3c25a38112$exports = {\n  \"ascending\": `tõusev järjestus`,\n  \"ascendingSort\": args => `sorditud veeru järgi ${args.columnName} tõusvas järjestuses`,\n  \"columnSize\": args => `${args.value} pikslit`,\n  \"descending\": `laskuv järjestus`,\n  \"descendingSort\": args => `sorditud veeru järgi ${args.columnName} laskuvas järjestuses`,\n  \"select\": `Vali`,\n  \"selectAll\": `Vali kõik`,\n  \"sortable\": `sorditav veerg`\n};\nvar $da1e751a92575e02$exports = {};\n$da1e751a92575e02$exports = {\n  \"ascending\": `nouseva`,\n  \"ascendingSort\": args => `lajiteltu sarakkeen ${args.columnName} mukaan nousevassa järjestyksessä`,\n  \"columnSize\": args => `${args.value} pikseliä`,\n  \"descending\": `laskeva`,\n  \"descendingSort\": args => `lajiteltu sarakkeen ${args.columnName} mukaan laskevassa järjestyksessä`,\n  \"select\": `Valitse`,\n  \"selectAll\": `Valitse kaikki`,\n  \"sortable\": `lajiteltava sarake`\n};\nvar $1b5d6c6c47d55106$exports = {};\n$1b5d6c6c47d55106$exports = {\n  \"ascending\": `croissant`,\n  \"ascendingSort\": args => `trié en fonction de la colonne ${args.columnName} par ordre croissant`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `décroissant`,\n  \"descendingSort\": args => `trié en fonction de la colonne ${args.columnName} par ordre décroissant`,\n  \"select\": `Sélectionner`,\n  \"selectAll\": `Sélectionner tout`,\n  \"sortable\": `colonne triable`\n};\nvar $7c18ba27b86d3308$exports = {};\n$7c18ba27b86d3308$exports = {\n  \"ascending\": `עולה`,\n  \"ascendingSort\": args => `מוין לפי עמודה ${args.columnName} בסדר עולה`,\n  \"columnSize\": args => `${args.value} פיקסלים`,\n  \"descending\": `יורד`,\n  \"descendingSort\": args => `מוין לפי עמודה ${args.columnName} בסדר יורד`,\n  \"select\": `בחר`,\n  \"selectAll\": `בחר הכול`,\n  \"sortable\": `עמודה שניתן למיין`\n};\nvar $2cb40998e20e8a46$exports = {};\n$2cb40998e20e8a46$exports = {\n  \"ascending\": `rastući`,\n  \"ascendingSort\": args => `razvrstano po stupcima ${args.columnName} rastućem redoslijedom`,\n  \"columnSize\": args => `${args.value} piksela`,\n  \"descending\": `padajući`,\n  \"descendingSort\": args => `razvrstano po stupcima ${args.columnName} padajućim redoslijedom`,\n  \"select\": `Odaberite`,\n  \"selectAll\": `Odaberite sve`,\n  \"sortable\": `stupac koji se može razvrstati`\n};\nvar $189e23eec1d6aa3a$exports = {};\n$189e23eec1d6aa3a$exports = {\n  \"ascending\": `növekvő`,\n  \"ascendingSort\": args => `rendezve a(z) ${args.columnName} oszlop szerint, növekvő sorrendben`,\n  \"columnSize\": args => `${args.value} képpont`,\n  \"descending\": `csökkenő`,\n  \"descendingSort\": args => `rendezve a(z) ${args.columnName} oszlop szerint, csökkenő sorrendben`,\n  \"select\": `Kijelölés`,\n  \"selectAll\": `Összes kijelölése`,\n  \"sortable\": `rendezendő oszlop`\n};\nvar $3c5ec8e4f015dfd0$exports = {};\n$3c5ec8e4f015dfd0$exports = {\n  \"ascending\": `crescente`,\n  \"ascendingSort\": args => `in ordine crescente in base alla colonna ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixel`,\n  \"descending\": `decrescente`,\n  \"descendingSort\": args => `in ordine decrescente in base alla colonna ${args.columnName}`,\n  \"select\": `Seleziona`,\n  \"selectAll\": `Seleziona tutto`,\n  \"sortable\": `colonna ordinabile`\n};\nvar $d021d50e6b315ebb$exports = {};\n$d021d50e6b315ebb$exports = {\n  \"ascending\": `昇順`,\n  \"ascendingSort\": args => `列 ${args.columnName} を昇順で並べ替え`,\n  \"columnSize\": args => `${args.value} ピクセル`,\n  \"descending\": `降順`,\n  \"descendingSort\": args => `列 ${args.columnName} を降順で並べ替え`,\n  \"select\": `選択`,\n  \"selectAll\": `すべて選択`,\n  \"sortable\": `並べ替え可能な列`\n};\nvar $52535c35c24ec937$exports = {};\n$52535c35c24ec937$exports = {\n  \"ascending\": `오름차순`,\n  \"ascendingSort\": args => `${args.columnName} 열을 기준으로 오름차순으로 정렬됨`,\n  \"columnSize\": args => `${args.value} 픽셀`,\n  \"descending\": `내림차순`,\n  \"descendingSort\": args => `${args.columnName} 열을 기준으로 내림차순으로 정렬됨`,\n  \"select\": `선택`,\n  \"selectAll\": `모두 선택`,\n  \"sortable\": `정렬 가능한 열`\n};\nvar $b37ee03672edfd1d$exports = {};\n$b37ee03672edfd1d$exports = {\n  \"ascending\": `didėjančia tvarka`,\n  \"ascendingSort\": args => `surikiuota pagal stulpelį ${args.columnName} didėjančia tvarka`,\n  \"columnSize\": args => `${args.value} piks.`,\n  \"descending\": `mažėjančia tvarka`,\n  \"descendingSort\": args => `surikiuota pagal stulpelį ${args.columnName} mažėjančia tvarka`,\n  \"select\": `Pasirinkti`,\n  \"selectAll\": `Pasirinkti viską`,\n  \"sortable\": `rikiuojamas stulpelis`\n};\nvar $c7df6686b4189d56$exports = {};\n$c7df6686b4189d56$exports = {\n  \"ascending\": `augošā secībā`,\n  \"ascendingSort\": args => `kārtots pēc kolonnas ${args.columnName} augošā secībā`,\n  \"columnSize\": args => `${args.value} pikseļi`,\n  \"descending\": `dilstošā secībā`,\n  \"descendingSort\": args => `kārtots pēc kolonnas ${args.columnName} dilstošā secībā`,\n  \"select\": `Atlasīt`,\n  \"selectAll\": `Atlasīt visu`,\n  \"sortable\": `kārtojamā kolonna`\n};\nvar $da07fe8ec87e6b68$exports = {};\n$da07fe8ec87e6b68$exports = {\n  \"ascending\": `stigende`,\n  \"ascendingSort\": args => `sortert etter kolonne ${args.columnName} i stigende rekkefølge`,\n  \"columnSize\": args => `${args.value} piksler`,\n  \"descending\": `synkende`,\n  \"descendingSort\": args => `sortert etter kolonne ${args.columnName} i synkende rekkefølge`,\n  \"select\": `Velg`,\n  \"selectAll\": `Velg alle`,\n  \"sortable\": `kolonne som kan sorteres`\n};\nvar $64b7e390f5791490$exports = {};\n$64b7e390f5791490$exports = {\n  \"ascending\": `oplopend`,\n  \"ascendingSort\": args => `gesorteerd in oplopende volgorde in kolom ${args.columnName}`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `aflopend`,\n  \"descendingSort\": args => `gesorteerd in aflopende volgorde in kolom ${args.columnName}`,\n  \"select\": `Selecteren`,\n  \"selectAll\": `Alles selecteren`,\n  \"sortable\": `sorteerbare kolom`\n};\nvar $2a03621e773f1678$exports = {};\n$2a03621e773f1678$exports = {\n  \"ascending\": `rosnąco`,\n  \"ascendingSort\": args => `posortowano według kolumny ${args.columnName} w porządku rosnącym`,\n  \"columnSize\": args => `Liczba pikseli: ${args.value}`,\n  \"descending\": `malejąco`,\n  \"descendingSort\": args => `posortowano według kolumny ${args.columnName} w porządku malejącym`,\n  \"select\": `Zaznacz`,\n  \"selectAll\": `Zaznacz wszystko`,\n  \"sortable\": `kolumna z możliwością sortowania`\n};\nvar $0a79c0aba9e5ecc6$exports = {};\n$0a79c0aba9e5ecc6$exports = {\n  \"ascending\": `crescente`,\n  \"ascendingSort\": args => `classificado pela coluna ${args.columnName} em ordem crescente`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `decrescente`,\n  \"descendingSort\": args => `classificado pela coluna ${args.columnName} em ordem decrescente`,\n  \"select\": `Selecionar`,\n  \"selectAll\": `Selecionar tudo`,\n  \"sortable\": `coluna classificável`\n};\nvar $de7b4d0f7dc86fc8$exports = {};\n$de7b4d0f7dc86fc8$exports = {\n  \"ascending\": `ascendente`,\n  \"ascendingSort\": args => `Ordenar por coluna ${args.columnName} em ordem ascendente`,\n  \"columnSize\": args => `${args.value} pixels`,\n  \"descending\": `descendente`,\n  \"descendingSort\": args => `Ordenar por coluna ${args.columnName} em ordem descendente`,\n  \"select\": `Selecionar`,\n  \"selectAll\": `Selecionar tudo`,\n  \"sortable\": `Coluna ordenável`\n};\nvar $28ea7e849d77bd1c$exports = {};\n$28ea7e849d77bd1c$exports = {\n  \"ascending\": `crescătoare`,\n  \"ascendingSort\": args => `sortate după coloana ${args.columnName} în ordine crescătoare`,\n  \"columnSize\": args => `${args.value} pixeli`,\n  \"descending\": `descrescătoare`,\n  \"descendingSort\": args => `sortate după coloana ${args.columnName} în ordine descrescătoare`,\n  \"select\": `Selectare`,\n  \"selectAll\": `Selectare totală`,\n  \"sortable\": `coloană sortabilă`\n};\nvar $9a09321cf046b187$exports = {};\n$9a09321cf046b187$exports = {\n  \"ascending\": `возрастание`,\n  \"ascendingSort\": args => `сортировать столбец ${args.columnName} в порядке возрастания`,\n  \"columnSize\": args => `${args.value} пикс.`,\n  \"descending\": `убывание`,\n  \"descendingSort\": args => `сортировать столбец ${args.columnName} в порядке убывания`,\n  \"select\": `Выбрать`,\n  \"selectAll\": `Выбрать все`,\n  \"sortable\": `сортируемый столбец`\n};\nvar $5afe469a63fcac7b$exports = {};\n$5afe469a63fcac7b$exports = {\n  \"ascending\": `vzostupne`,\n  \"ascendingSort\": args => `zoradené zostupne podľa stĺpca ${args.columnName}`,\n  \"columnSize\": args => `Počet pixelov: ${args.value}`,\n  \"descending\": `zostupne`,\n  \"descendingSort\": args => `zoradené zostupne podľa stĺpca ${args.columnName}`,\n  \"select\": `Vybrať`,\n  \"selectAll\": `Vybrať všetko`,\n  \"sortable\": `zoraditeľný stĺpec`\n};\nvar $2956757ac31a7ce2$exports = {};\n$2956757ac31a7ce2$exports = {\n  \"ascending\": `naraščajoče`,\n  \"ascendingSort\": args => `razvrščeno po stolpcu ${args.columnName} v naraščajočem vrstnem redu`,\n  \"columnSize\": args => `${args.value} slikovnih pik`,\n  \"descending\": `padajoče`,\n  \"descendingSort\": args => `razvrščeno po stolpcu ${args.columnName} v padajočem vrstnem redu`,\n  \"select\": `Izberite`,\n  \"selectAll\": `Izberite vse`,\n  \"sortable\": `razvrstljivi stolpec`\n};\nvar $cedee0e66b175529$exports = {};\n$cedee0e66b175529$exports = {\n  \"ascending\": `rastući`,\n  \"ascendingSort\": args => `sortirano po kolonama ${args.columnName} rastućim redosledom`,\n  \"descending\": `padajući`,\n  \"descendingSort\": args => `sortirano po kolonama ${args.columnName} padajućim redosledom`,\n  \"select\": `Izaberite`,\n  \"selectAll\": `Izaberite sve`,\n  \"sortable\": `kolona koja se može sortirati`\n};\nvar $6db19998ba4427da$exports = {};\n$6db19998ba4427da$exports = {\n  \"ascending\": `stigande`,\n  \"ascendingSort\": args => `sorterat på kolumn ${args.columnName} i stigande ordning`,\n  \"columnSize\": args => `${args.value} pixlar`,\n  \"descending\": `fallande`,\n  \"descendingSort\": args => `sorterat på kolumn ${args.columnName} i fallande ordning`,\n  \"select\": `Markera`,\n  \"selectAll\": `Markera allt`,\n  \"sortable\": `sorterbar kolumn`\n};\nvar $166b7c9cc1adb1a1$exports = {};\n$166b7c9cc1adb1a1$exports = {\n  \"ascending\": `artan sırada`,\n  \"ascendingSort\": args => `${args.columnName} sütuna göre artan düzende sırala`,\n  \"columnSize\": args => `${args.value} piksel`,\n  \"descending\": `azalan sırada`,\n  \"descendingSort\": args => `${args.columnName} sütuna göre azalan düzende sırala`,\n  \"select\": `Seç`,\n  \"selectAll\": `Tümünü Seç`,\n  \"sortable\": `Sıralanabilir sütun`\n};\nvar $c7ab180b401e49ff$exports = {};\n$c7ab180b401e49ff$exports = {\n  \"ascending\": `висхідний`,\n  \"ascendingSort\": args => `відсортовано за стовпцем ${args.columnName} у висхідному порядку`,\n  \"columnSize\": args => `${args.value} пікс.`,\n  \"descending\": `низхідний`,\n  \"descendingSort\": args => `відсортовано за стовпцем ${args.columnName} у низхідному порядку`,\n  \"select\": `Вибрати`,\n  \"selectAll\": `Вибрати все`,\n  \"sortable\": `сортувальний стовпець`\n};\nvar $1648ec00941567f3$exports = {};\n$1648ec00941567f3$exports = {\n  \"ascending\": `升序`,\n  \"ascendingSort\": args => `按列 ${args.columnName} 升序排序`,\n  \"columnSize\": args => `${args.value} 像素`,\n  \"descending\": `降序`,\n  \"descendingSort\": args => `按列 ${args.columnName} 降序排序`,\n  \"select\": `选择`,\n  \"selectAll\": `全选`,\n  \"sortable\": `可排序的列`\n};\nvar $b26f22384b3c1526$exports = {};\n$b26f22384b3c1526$exports = {\n  \"ascending\": `遞增`,\n  \"ascendingSort\": args => `已依據「${args.columnName}」欄遞增排序`,\n  \"columnSize\": args => `${args.value} 像素`,\n  \"descending\": `遞減`,\n  \"descendingSort\": args => `已依據「${args.columnName}」欄遞減排序`,\n  \"select\": `選取`,\n  \"selectAll\": `全選`,\n  \"sortable\": `可排序的欄`\n};\n$ae7e9c471762b4d3$exports = {\n  \"ar-AE\": $ce3de3ff2fd66848$exports,\n  \"bg-BG\": $cb80dcce530985b9$exports,\n  \"cs-CZ\": $68ac86749db4c0fb$exports,\n  \"da-DK\": $9a6cbac08487e661$exports,\n  \"de-DE\": $c963661d89486e72$exports,\n  \"el-GR\": $ac03861c6e8605f4$exports,\n  \"en-US\": $09e6b82e0d6e466a$exports,\n  \"es-ES\": $8cc39eb66c2bf220$exports,\n  \"et-EE\": $4e11db3c25a38112$exports,\n  \"fi-FI\": $da1e751a92575e02$exports,\n  \"fr-FR\": $1b5d6c6c47d55106$exports,\n  \"he-IL\": $7c18ba27b86d3308$exports,\n  \"hr-HR\": $2cb40998e20e8a46$exports,\n  \"hu-HU\": $189e23eec1d6aa3a$exports,\n  \"it-IT\": $3c5ec8e4f015dfd0$exports,\n  \"ja-JP\": $d021d50e6b315ebb$exports,\n  \"ko-KR\": $52535c35c24ec937$exports,\n  \"lt-LT\": $b37ee03672edfd1d$exports,\n  \"lv-LV\": $c7df6686b4189d56$exports,\n  \"nb-NO\": $da07fe8ec87e6b68$exports,\n  \"nl-NL\": $64b7e390f5791490$exports,\n  \"pl-PL\": $2a03621e773f1678$exports,\n  \"pt-BR\": $0a79c0aba9e5ecc6$exports,\n  \"pt-PT\": $de7b4d0f7dc86fc8$exports,\n  \"ro-RO\": $28ea7e849d77bd1c$exports,\n  \"ru-RU\": $9a09321cf046b187$exports,\n  \"sk-SK\": $5afe469a63fcac7b$exports,\n  \"sl-SI\": $2956757ac31a7ce2$exports,\n  \"sr-SP\": $cedee0e66b175529$exports,\n  \"sv-SE\": $6db19998ba4427da$exports,\n  \"tr-TR\": $166b7c9cc1adb1a1$exports,\n  \"uk-UA\": $c7ab180b401e49ff$exports,\n  \"zh-CN\": $1648ec00941567f3$exports,\n  \"zh-TW\": $b26f22384b3c1526$exports\n};\nclass $0ba3c81c7f1caedd$export$da43f8f5cb04028d extends $lJcFS$GridKeyboardDelegate {\n  isCell(node) {\n    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';\n  }\n  getKeyBelow(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return;\n    // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n    if (startItem.type === 'column') {\n      let child = [...startItem.childNodes][0];\n      if (child) return child.key;\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) return;\n      let firstItem = this.collection.getItem(firstKey);\n      return [...firstItem.childNodes][startItem.index].key;\n    }\n    return super.getKeyBelow(key);\n  }\n  getKeyAbove(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return;\n    // If focus was on a column, focus the parent column if any\n    if (startItem.type === 'column') {\n      let parent = this.collection.getItem(startItem.parentKey);\n      if (parent && parent.type === 'column') return parent.key;\n      return;\n    }\n    // only return above row key if not header row\n    let superKey = super.getKeyAbove(key);\n    if (superKey != null && this.collection.getItem(superKey).type !== 'headerrow') return superKey;\n    // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n    if (this.isCell(startItem)) return this.collection.columns[startItem.index].key;\n    // If focus was on a row, then focus the first column header.\n    return this.collection.columns[0].key;\n  }\n  findNextColumnKey(column) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === 'column');\n    if (key != null) return key;\n    // Wrap around to the first column\n    let row = this.collection.headerRows[column.level];\n    for (let item1 of row.childNodes) {\n      if (item1.type === 'column') return item1.key;\n    }\n  }\n  findPreviousColumnKey(column) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === 'column');\n    if (key != null) return key;\n    // Wrap around to the last column\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...row.childNodes];\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === 'column') return item.key;\n    }\n  }\n  getKeyRightOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return;\n    // If focus was on a column, then focus the next column\n    if (item.type === 'column') return this.direction === 'rtl' ? this.findPreviousColumnKey(item) : this.findNextColumnKey(item);\n    return super.getKeyRightOf(key);\n  }\n  getKeyLeftOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return;\n    // If focus was on a column, then focus the previous column\n    if (item.type === 'column') return this.direction === 'rtl' ? this.findNextColumnKey(item) : this.findPreviousColumnKey(item);\n    return super.getKeyLeftOf(key);\n  }\n  getKeyForSearch(search, fromKey) {\n    if (!this.collator) return null;\n    let collection = this.collection;\n    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();\n    if (key == null) return null;\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') key = startItem.parentKey;\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n      // Check each of the row header cells in this row for a match\n      for (let cell of item.childNodes) {\n        let column = collection.columns[cell.index];\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem.type === 'cell' ? cell.key : item.key;\n          }\n        }\n      }\n      key = this.getKeyBelow(key);\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n    return null;\n  }\n}\nfunction $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref1) {\n  let {\n    keyboardDelegate: keyboardDelegate,\n    isVirtualized: isVirtualized,\n    layout: layout\n  } = props;\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = $lJcFS$useCollator({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  let {\n    direction: direction\n  } = $lJcFS$useLocale();\n  let delegate = $lJcFS$useMemo(() => keyboardDelegate || new $0ba3c81c7f1caedd$export$da43f8f5cb04028d({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref: ref1,\n    direction: direction,\n    collator: collator,\n    layout: layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref1, direction, collator, layout]);\n  let id = $lJcFS$useId(props.id);\n  $2140fb2337097f2d$export$552312adfd451dab.set(state, id);\n  let {\n    gridProps: gridProps\n  } = $lJcFS$useGrid({\n    ...props,\n    id: id,\n    keyboardDelegate: delegate,\n    getRowText(key) {\n      let added = state.collection.getItem(key);\n      if (!added) return '';\n      // If the row has a textValue, use that.\n      if (added.textValue != null) return added.textValue;\n      // Otherwise combine the text of each of the row header columns.\n      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;\n      if (rowHeaderColumnKeys) {\n        let text = [];\n        for (let cell of added.childNodes) {\n          let column = state.collection.columns[cell.index];\n          if (rowHeaderColumnKeys.has(column.key) && cell.textValue) text.push(cell.textValue);\n          if (text.length === rowHeaderColumnKeys.size) break;\n        }\n        return text.join(' ');\n      }\n      return '';\n    }\n  }, state, ref1);\n  // Override to include header rows\n  if (isVirtualized) gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;\n  let {\n    column: column1,\n    direction: sortDirection\n  } = state.sortDescriptor || {};\n  let stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let sortDescription = $lJcFS$useMemo(() => {\n    var ref;\n    let columnName = (ref = state.collection.columns.find(c => c.key === column1)) === null || ref === void 0 ? void 0 : ref.textValue;\n    return sortDirection && column1 ? stringFormatter.format(`${sortDirection}Sort`, {\n      columnName: columnName\n    }) : undefined;\n  }, [sortDirection, column1, state.collection.columns]);\n  let descriptionProps = $lJcFS$useDescription(sortDescription);\n  // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n  $lJcFS$useUpdateEffect(() => {\n    $lJcFS$announce(sortDescription, 'assertive', 500);\n  }, [sortDescription]);\n  return {\n    gridProps: $lJcFS$mergeProps(gridProps, descriptionProps,\n    // If table is empty, make sure the table is tabbable\n    state.collection.size === 0 && {\n      tabIndex: 0\n    }, {\n      // merge sort description with long press information\n      'aria-describedby': [descriptionProps['aria-describedby'], gridProps['aria-describedby']].filter(Boolean).join(' ')\n    })\n  };\n}\nfunction $f329116d8ad0aba0$export$9514819a8c81e960(props, state, ref) {\n  var ref1, ref2;\n  let {\n    node: node\n  } = props;\n  let allowsSorting = node.props.allowsSorting;\n  // the selection cell column header needs to focus the checkbox within it but the other columns should focus the cell so that focus doesn't land on the resizer\n  let {\n    gridCellProps: gridCellProps\n  } = $lJcFS$useGridCell({\n    ...props,\n    focusMode: node.props.isSelectionCell || props.hasMenu || node.props.allowsSorting ? 'child' : 'cell'\n  }, state, ref);\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';\n  let {\n    pressProps: pressProps\n  } = $lJcFS$usePress({\n    isDisabled: !allowsSorting || isSelectionCellDisabled,\n    onPress() {\n      state.sort(node.key);\n    },\n    ref: ref\n  });\n  // Needed to pick up the focusable context, enabling things like Tooltips for example\n  let {\n    focusableProps: focusableProps\n  } = $lJcFS$useFocusable({}, ref);\n  if (props.hasMenu) pressProps = {};\n  let ariaSort = null;\n  let isSortedColumn = ((ref1 = state.sortDescriptor) === null || ref1 === void 0 ? void 0 : ref1.column) === node.key;\n  let sortDirection = (ref2 = state.sortDescriptor) === null || ref2 === void 0 ? void 0 : ref2.direction;\n  // aria-sort not supported in Android Talkback\n  if (node.props.allowsSorting && !$lJcFS$isAndroid()) ariaSort = isSortedColumn ? sortDirection : 'none';\n  let stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let sortDescription;\n  if (allowsSorting) {\n    sortDescription = `${stringFormatter.format('sortable')}`;\n    // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n    if (isSortedColumn && sortDirection && $lJcFS$isAndroid()) sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;\n  }\n  let descriptionProps = $lJcFS$useDescription(sortDescription);\n  return {\n    columnHeaderProps: {\n      ...$lJcFS$mergeProps(gridCellProps, pressProps, focusableProps, descriptionProps,\n      // If the table is empty, make all column headers untabbable or programatically focusable\n      state.collection.size === 0 && {\n        tabIndex: null\n      }),\n      role: 'columnheader',\n      id: $2140fb2337097f2d$export$37cd4213f2ad742e(state, node.key),\n      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : null,\n      'aria-sort': ariaSort\n    }\n  };\n}\nfunction $b2db214c022798eb$export$7f2f6ae19e707aa5(props, state, ref) {\n  let {\n    node: node\n  } = props;\n  let {\n    rowProps: rowProps,\n    isPressed: isPressed\n  } = $lJcFS$useGridRow(props, state, ref);\n  return {\n    rowProps: {\n      ...rowProps,\n      'aria-labelledby': $2140fb2337097f2d$export$85069b70317f543(state, node.key)\n    },\n    isPressed: isPressed\n  };\n}\nfunction $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized\n  } = props;\n  let rowProps = {\n    role: 'row'\n  };\n  if (isVirtualized) rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  return {\n    rowProps: rowProps\n  };\n}\nfunction $7713593715703b24$export$49571c903d73624c(props, state, ref) {\n  let {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  } = $lJcFS$useGridCell(props, state, ref);\n  let columnKey = props.node.column.key;\n  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = 'rowheader';\n    gridCellProps.id = $2140fb2337097f2d$export$19baff3266315d44(state, props.node.parentKey, columnKey);\n  }\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\nfunction $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {\n  let {\n    key: key\n  } = props;\n  const {\n    checkboxProps: checkboxProps\n  } = $lJcFS$useGridSelectionCheckbox(props, state);\n  return {\n    checkboxProps: {\n      ...checkboxProps,\n      'aria-labelledby': `${checkboxProps.id} ${$2140fb2337097f2d$export$85069b70317f543(state, key)}`\n    }\n  };\n}\nfunction $2a795c53a101c542$export$1003db6a7e384b99(state) {\n  let {\n    isEmpty: isEmpty,\n    isSelectAll: isSelectAll,\n    selectionMode: selectionMode\n  } = state.selectionManager;\n  const stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  return {\n    checkboxProps: {\n      'aria-label': stringFormatter.format(selectionMode === 'single' ? 'select' : 'selectAll'),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== 'multiple' || state.collection.size === 0,\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\nfunction $e91ef4e5004e3774$export$52994e973806c219(props, state, columnState, ref) {\n  let {\n    column: item,\n    triggerRef: triggerRef,\n    isDisabled: isDisabled\n  } = props;\n  const stateRef = $lJcFS$useRef(null);\n  stateRef.current = columnState;\n  const stringFormatter = $lJcFS$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($ae7e9c471762b4d3$exports));\n  let id = $lJcFS$useId();\n  let {\n    direction: direction\n  } = $lJcFS$useLocale();\n  let {\n    keyboardProps: keyboardProps\n  } = $lJcFS$useKeyboard({\n    onKeyDown: e => {\n      if (e.key === 'Escape' || e.key === 'Enter' || e.key === ' ' || e.key === 'Tab') {\n        e.preventDefault();\n        // switch focus back to the column header on anything that ends edit mode\n        $lJcFS$focusSafely(triggerRef.current);\n      }\n    }\n  });\n  const columnResizeWidthRef = $lJcFS$useRef(0);\n  const {\n    moveProps: moveProps\n  } = $lJcFS$useMove({\n    onMoveStart() {\n      columnResizeWidthRef.current = stateRef.current.getColumnWidth(item.key);\n      stateRef.current.onColumnResizeStart(item);\n    },\n    onMove(e) {\n      let {\n        deltaX: deltaX,\n        deltaY: deltaY,\n        pointerType: pointerType\n      } = e;\n      if (direction === 'rtl') deltaX *= -1;\n      if (pointerType === 'keyboard') {\n        if (deltaY !== 0 && deltaX === 0) deltaX = deltaY * -1;\n        deltaX *= 10;\n      }\n      // if moving up/down only, no need to resize\n      if (deltaX !== 0) {\n        columnResizeWidthRef.current += deltaX;\n        stateRef.current.onColumnResize(item, columnResizeWidthRef.current);\n        props.onMove(e);\n      }\n    },\n    onMoveEnd(e) {\n      let {\n        pointerType: pointerType\n      } = e;\n      columnResizeWidthRef.current = 0;\n      props.onMoveEnd(e);\n      if (pointerType === 'mouse') stateRef.current.onColumnResizeEnd(item);\n    }\n  });\n  let min = Math.floor(stateRef.current.getColumnMinWidth(item.key));\n  let max = Math.floor(stateRef.current.getColumnMaxWidth(item.key));\n  if (max === Infinity) max = Number.MAX_SAFE_INTEGER;\n  let value = Math.floor(stateRef.current.getColumnWidth(item.key));\n  let ariaProps = {\n    'aria-label': props.label,\n    'aria-orientation': 'horizontal',\n    'aria-labelledby': `${id} ${$2140fb2337097f2d$export$37cd4213f2ad742e(state, item.key)}`,\n    'aria-valuetext': stringFormatter.format('columnSize', {\n      value: value\n    }),\n    min: min,\n    max: max,\n    value: value\n  };\n  const focusInput = $lJcFS$useCallback(() => {\n    if (ref.current) $lJcFS$focusWithoutScrolling(ref.current);\n  }, [ref]);\n  let onChange = e => {\n    let currentWidth = stateRef.current.getColumnWidth(item.key);\n    let nextValue = parseFloat(e.target.value);\n    if (nextValue > currentWidth) nextValue = currentWidth + 10;else nextValue = currentWidth - 10;\n    stateRef.current.onColumnResize(item, nextValue);\n  };\n  let {\n    pressProps: pressProps\n  } = $lJcFS$usePress({\n    onPressStart: e => {\n      if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey || e.pointerType === 'keyboard') return;\n      if (e.pointerType === 'virtual' && columnState.currentlyResizingColumn != null) {\n        stateRef.current.onColumnResizeEnd(item);\n        $lJcFS$focusSafely(triggerRef.current);\n        return;\n      }\n      focusInput();\n    },\n    onPress: e => {\n      if (e.pointerType === 'touch') focusInput();else if (e.pointerType !== 'virtual') $lJcFS$focusSafely(triggerRef.current);\n    }\n  });\n  return {\n    resizerProps: $lJcFS$mergeProps(keyboardProps, moveProps, pressProps),\n    inputProps: $lJcFS$mergeProps({\n      id: id,\n      onFocus: () => {\n        // useMove calls onMoveStart for every keypress, but we want resize start to only be called when we start resize mode\n        // call instead during focus and blur\n        stateRef.current.onColumnResizeStart(item);\n        state.setKeyboardNavigationDisabled(true);\n      },\n      onBlur: () => {\n        stateRef.current.onColumnResizeEnd(item);\n        state.setKeyboardNavigationDisabled(false);\n      },\n      onChange: onChange,\n      disabled: isDisabled\n    }, ariaProps)\n  };\n}\nfunction $0047e6c294ea075f$export$6fb1613bd7b28198() {\n  return $lJcFS$useGridRowGroup();\n}\nexport { $0047e6c294ea075f$export$6fb1613bd7b28198 as useTableRowGroup, $6e31608fbba75bab$export$25bceaac3c7e4dc7 as useTable, $f329116d8ad0aba0$export$9514819a8c81e960 as useTableColumnHeader, $b2db214c022798eb$export$7f2f6ae19e707aa5 as useTableRow, $f917ee10f4c32dab$export$1b95a7d2d517b841 as useTableHeaderRow, $7713593715703b24$export$49571c903d73624c as useTableCell, $2a795c53a101c542$export$16ea7f650bd7c1bb as useTableSelectionCheckbox, $2a795c53a101c542$export$1003db6a7e384b99 as useTableSelectAllCheckbox, $e91ef4e5004e3774$export$52994e973806c219 as useTableColumnResize };","map":{"version":3,"names":["$2140fb2337097f2d$export$552312adfd451dab","WeakMap","$2140fb2337097f2d$var$normalizeKey","key","replace","$2140fb2337097f2d$export$37cd4213f2ad742e","state","columnKey","gridId","get","Error","$2140fb2337097f2d$export$19baff3266315d44","rowKey","$2140fb2337097f2d$export$85069b70317f543","collection","rowHeaderColumnKeys","map","join","$ce3de3ff2fd66848$exports","args","columnName","value","$cb80dcce530985b9$exports","$68ac86749db4c0fb$exports","$9a6cbac08487e661$exports","$c963661d89486e72$exports","$ac03861c6e8605f4$exports","$09e6b82e0d6e466a$exports","$8cc39eb66c2bf220$exports","$4e11db3c25a38112$exports","$da1e751a92575e02$exports","$1b5d6c6c47d55106$exports","$7c18ba27b86d3308$exports","$2cb40998e20e8a46$exports","$189e23eec1d6aa3a$exports","$3c5ec8e4f015dfd0$exports","$d021d50e6b315ebb$exports","$52535c35c24ec937$exports","$b37ee03672edfd1d$exports","$c7df6686b4189d56$exports","$da07fe8ec87e6b68$exports","$64b7e390f5791490$exports","$2a03621e773f1678$exports","$0a79c0aba9e5ecc6$exports","$de7b4d0f7dc86fc8$exports","$28ea7e849d77bd1c$exports","$9a09321cf046b187$exports","$5afe469a63fcac7b$exports","$2956757ac31a7ce2$exports","$cedee0e66b175529$exports","$6db19998ba4427da$exports","$166b7c9cc1adb1a1$exports","$c7ab180b401e49ff$exports","$1648ec00941567f3$exports","$b26f22384b3c1526$exports","$ae7e9c471762b4d3$exports","$0ba3c81c7f1caedd$export$da43f8f5cb04028d","$lJcFS$GridKeyboardDelegate","isCell","node","type","getKeyBelow","startItem","getItem","child","childNodes","firstKey","getFirstKey","firstItem","index","getKeyAbove","parent","parentKey","superKey","columns","findNextColumnKey","column","findNextKey","item","row","headerRows","level","item1","findPreviousColumnKey","findPreviousKey","i","length","getKeyRightOf","direction","getKeyLeftOf","getKeyForSearch","search","fromKey","collator","hasWrapped","cell","has","textValue","substring","slice","compare","fromItem","$6e31608fbba75bab$export$25bceaac3c7e4dc7","props","ref1","keyboardDelegate","isVirtualized","layout","$lJcFS$useCollator","usage","sensitivity","$lJcFS$useLocale","delegate","$lJcFS$useMemo","disabledKeys","id","$lJcFS$useId","set","gridProps","$lJcFS$useGrid","getRowText","added","text","push","size","column1","sortDirection","sortDescriptor","stringFormatter","$lJcFS$useLocalizedStringFormatter","$parcel$interopDefault","sortDescription","ref","find","c","format","undefined","descriptionProps","$lJcFS$useDescription","$lJcFS$useUpdateEffect","$lJcFS$announce","$lJcFS$mergeProps","tabIndex","filter","Boolean","$f329116d8ad0aba0$export$9514819a8c81e960","ref2","allowsSorting","gridCellProps","$lJcFS$useGridCell","focusMode","isSelectionCell","hasMenu","isSelectionCellDisabled","selectionManager","selectionMode","pressProps","$lJcFS$usePress","isDisabled","onPress","sort","focusableProps","$lJcFS$useFocusable","ariaSort","isSortedColumn","$lJcFS$isAndroid","columnHeaderProps","role","colspan","$b2db214c022798eb$export$7f2f6ae19e707aa5","rowProps","isPressed","$lJcFS$useGridRow","$f917ee10f4c32dab$export$1b95a7d2d517b841","$7713593715703b24$export$49571c903d73624c","$2a795c53a101c542$export$16ea7f650bd7c1bb","checkboxProps","$lJcFS$useGridSelectionCheckbox","$2a795c53a101c542$export$1003db6a7e384b99","isEmpty","isSelectAll","isSelected","isIndeterminate","onChange","toggleSelectAll","$e91ef4e5004e3774$export$52994e973806c219","columnState","triggerRef","stateRef","$lJcFS$useRef","current","keyboardProps","$lJcFS$useKeyboard","onKeyDown","e","preventDefault","$lJcFS$focusSafely","columnResizeWidthRef","moveProps","$lJcFS$useMove","onMoveStart","getColumnWidth","onColumnResizeStart","onMove","deltaX","deltaY","pointerType","onColumnResize","onMoveEnd","onColumnResizeEnd","min","Math","floor","getColumnMinWidth","max","getColumnMaxWidth","Infinity","Number","MAX_SAFE_INTEGER","ariaProps","label","focusInput","$lJcFS$useCallback","$lJcFS$focusWithoutScrolling","currentWidth","nextValue","parseFloat","target","onPressStart","ctrlKey","altKey","metaKey","shiftKey","currentlyResizingColumn","resizerProps","inputProps","onFocus","setKeyboardNavigationDisabled","onBlur","disabled","$0047e6c294ea075f$export$6fb1613bd7b28198","$lJcFS$useGridRowGroup"],"sources":["C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\index.ts","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTable.ts","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\utils.ts","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\*.js","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\ar-AE.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\bg-BG.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\cs-CZ.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\da-DK.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\de-DE.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\el-GR.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\en-US.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\es-ES.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\et-EE.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\fi-FI.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\fr-FR.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\he-IL.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\hr-HR.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\hu-HU.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\it-IT.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\ja-JP.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\ko-KR.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\lt-LT.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\lv-LV.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\nb-NO.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\nl-NL.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\pl-PL.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\pt-BR.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\pt-PT.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\ro-RO.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\ru-RU.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\sk-SK.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\sl-SI.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\sr-SP.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\sv-SE.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\tr-TR.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\uk-UA.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\zh-CN.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\intl\\zh-TW.json","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\TableKeyboardDelegate.ts","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableColumnHeader.ts","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableRow.ts","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableHeaderRow.ts","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableCell.ts","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableSelectionCheckbox.ts","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\table\\dist\\packages\\@react-aria\\table\\src\\useTableColumnResize.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useTable} from './useTable';\nexport {useTableColumnHeader} from './useTableColumnHeader';\nexport {useTableRow} from './useTableRow';\nexport {useTableHeaderRow} from './useTableHeaderRow';\nexport {useTableCell} from './useTableCell';\nexport {useTableSelectionCheckbox, useTableSelectAllCheckbox} from './useTableSelectionCheckbox';\nexport {useTableColumnResize} from './useTableColumnResize';\n\n// Workaround for a Parcel bug where re-exports don't work in the CommonJS output format...\n// export {useGridRowGroup as useTableRowGroup} from '@react-aria/grid';\nimport {GridRowGroupAria, useGridRowGroup} from '@react-aria/grid';\nexport function useTableRowGroup(): GridRowGroupAria {\n  return useGridRowGroup();\n}\n\nexport type {AriaTableProps} from './useTable';\nexport type {GridAria, GridRowAria, GridRowProps} from '@react-aria/grid';\nexport type {AriaTableColumnHeaderProps, TableColumnHeaderAria} from './useTableColumnHeader';\nexport type {AriaTableCellProps, TableCellAria} from './useTableCell';\nexport type {TableHeaderRowAria} from './useTableHeaderRow';\nexport type {AriaTableSelectionCheckboxProps, TableSelectionCheckboxAria, TableSelectAllCheckboxAria} from './useTableSelectionCheckbox';\nexport type {AriaTableColumnResizeProps, TableColumnResizeAria} from './useTableColumnResize';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {GridAria, GridProps, useGrid} from '@react-aria/grid';\nimport {gridIds} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Layout} from '@react-stately/virtualizer';\nimport {mergeProps, useDescription, useId, useUpdateEffect} from '@react-aria/utils';\nimport {Node} from '@react-types/shared';\nimport {RefObject, useMemo} from 'react';\nimport {TableKeyboardDelegate} from './TableKeyboardDelegate';\nimport {TableState} from '@react-stately/table';\nimport {useCollator, useLocale} from '@react-aria/i18n';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaTableProps<T> extends GridProps {\n  /** The layout object for the table. Computes what content is visible and how to position and style them. */\n  layout?: Layout<Node<T>>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a table component.\n * A table displays data in rows and columns and enables a user to navigate its contents via directional navigation keys,\n * and optionally supports row selection and sorting.\n * @param props - Props for the table.\n * @param state - State for the table, as returned by `useTableState`.\n * @param ref - The ref attached to the table element.\n */\nexport function useTable<T>(props: AriaTableProps<T>, state: TableState<T>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    keyboardDelegate,\n    isVirtualized,\n    layout\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let delegate = useMemo(() => keyboardDelegate || new TableKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    layout\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, layout]);\n  let id = useId(props.id);\n  gridIds.set(state, id);\n\n  let {gridProps} = useGrid({\n    ...props,\n    id,\n    keyboardDelegate: delegate,\n    getRowText(key): string {\n      let added = state.collection.getItem(key);\n      if (!added) {\n        return '';\n      }\n\n      // If the row has a textValue, use that.\n      if (added.textValue != null) {\n        return added.textValue;\n      }\n\n      // Otherwise combine the text of each of the row header columns.\n      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;\n      if (rowHeaderColumnKeys) {\n        let text = [];\n        for (let cell of added.childNodes) {\n          let column = state.collection.columns[cell.index];\n          if (rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n            text.push(cell.textValue);\n          }\n\n          if (text.length === rowHeaderColumnKeys.size) {\n            break;\n          }\n        }\n\n        return text.join(' ');\n      }\n\n      return '';\n    }\n  }, state, ref);\n\n  // Override to include header rows\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size + state.collection.headerRows.length;\n  }\n\n  let {column, direction: sortDirection} = state.sortDescriptor || {};\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let sortDescription = useMemo(() => {\n    let columnName = state.collection.columns.find(c => c.key === column)?.textValue;\n    return sortDirection && column ? stringFormatter.format(`${sortDirection}Sort`, {columnName}) : undefined;\n  }, [sortDirection, column, state.collection.columns]);\n\n  let descriptionProps = useDescription(sortDescription);\n\n  // Only announce after initial render, tabbing to the table will tell you the initial sort info already\n  useUpdateEffect(() => {\n    announce(sortDescription, 'assertive', 500);\n  }, [sortDescription]);\n\n  return {\n    gridProps: mergeProps(\n      gridProps,\n      descriptionProps,\n      // If table is empty, make sure the table is tabbable\n      state.collection.size === 0 && {tabIndex: 0},\n      {\n        // merge sort description with long press information\n        'aria-describedby': [descriptionProps['aria-describedby'], gridProps['aria-describedby']].filter(Boolean).join(' ')\n      }\n    )\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from 'react';\nimport {TableState} from '@react-stately/table';\n\nexport const gridIds = new WeakMap<TableState<unknown>, string>();\n\nfunction normalizeKey(key: Key): string {\n  if (typeof key === 'string') {\n    return key.replace(/\\s*/g, '');\n  }\n\n  return '' + key;\n}\n\nexport function getColumnHeaderId<T>(state: TableState<T>, columnKey: Key): string {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(columnKey)}`;\n}\n\nexport function getCellId<T>(state: TableState<T>, rowKey: Key, columnKey: Key) {\n  let gridId = gridIds.get(state);\n  if (!gridId) {\n    throw new Error('Unknown grid');\n  }\n\n  return `${gridId}-${normalizeKey(rowKey)}-${normalizeKey(columnKey)}`;\n}\n\nexport function getRowLabelledBy<T>(state: TableState<T>, rowKey: Key): string {\n  // A row is labelled by it's row headers.\n  return [...state.collection.rowHeaderColumnKeys].map(columnKey =>\n    getCellId(state, rowKey, columnKey)\n  ).join(' ');\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","{\n  \"ascending\": \"تصاعدي\",\n  \"ascendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تصاعدي\",\n  \"columnSize\": \"{value} بالبكسل\",\n  \"descending\": \"تنازلي\",\n  \"descendingSort\": \"ترتيب حسب العمود {columnName} بترتيب تنازلي\",\n  \"select\": \"تحديد\",\n  \"selectAll\": \"تحديد الكل\",\n  \"sortable\": \"عمود قابل للترتيب\"\n}\n","{\n  \"ascending\": \"възходящ\",\n  \"ascendingSort\": \"сортирано по колона {columnName} във възходящ ред\",\n  \"columnSize\": \"{value} пиксела\",\n  \"descending\": \"низходящ\",\n  \"descendingSort\": \"сортирано по колона {columnName} в низходящ ред\",\n  \"select\": \"Изберете\",\n  \"selectAll\": \"Изберете всичко\",\n  \"sortable\": \"сортираща колона\"\n}\n","{\n  \"ascending\": \"vzestupně\",\n  \"ascendingSort\": \"řazeno vzestupně podle sloupce {columnName}\",\n  \"columnSize\": \"{value} pixelů\",\n  \"descending\": \"sestupně\",\n  \"descendingSort\": \"řazeno sestupně podle sloupce {columnName}\",\n  \"select\": \"Vybrat\",\n  \"selectAll\": \"Vybrat vše\",\n  \"sortable\": \"sloupec s možností řazení\"\n}\n","{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sorteret efter kolonne {columnName} i stigende rækkefølge\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"faldende\",\n  \"descendingSort\": \"sorteret efter kolonne {columnName} i faldende rækkefølge\",\n  \"select\": \"Vælg\",\n  \"selectAll\": \"Vælg alle\",\n  \"sortable\": \"sorterbar kolonne\"\n}\n","{\n  \"ascending\": \"aufsteigend\",\n  \"ascendingSort\": \"sortiert nach Spalte {columnName} in aufsteigender Reihenfolge\",\n  \"columnSize\": \"{value} Pixel\",\n  \"descending\": \"absteigend\",\n  \"descendingSort\": \"sortiert nach Spalte {columnName} in absteigender Reihenfolge\",\n  \"select\": \"Auswählen\",\n  \"selectAll\": \"Alles auswählen\",\n  \"sortable\": \"sortierbare Spalte\"\n}\n","{\n  \"ascending\": \"αύξουσα\",\n  \"ascendingSort\": \"διαλογή ανά στήλη {columnName} σε αύξουσα σειρά\",\n  \"columnSize\": \"{value} pixel\",\n  \"descending\": \"φθίνουσα\",\n  \"descendingSort\": \"διαλογή ανά στήλη {columnName} σε φθίνουσα σειρά\",\n  \"select\": \"Επιλογή\",\n  \"selectAll\": \"Επιλογή όλων\",\n  \"sortable\": \"Στήλη διαλογής\"\n}\n","{\n  \"select\": \"Select\",\n  \"selectAll\": \"Select All\",\n  \"sortable\": \"sortable column\",\n  \"ascending\": \"ascending\",\n  \"descending\": \"descending\",\n  \"ascendingSort\": \"sorted by column {columnName} in ascending order\",\n  \"descendingSort\": \"sorted by column {columnName} in descending order\",\n  \"columnSize\": \"{value} pixels\"\n}\n","{\n  \"ascending\": \"de subida\",\n  \"ascendingSort\": \"ordenado por columna {columnName} en orden de subida\",\n  \"columnSize\": \"{value} píxeles\",\n  \"descending\": \"de bajada\",\n  \"descendingSort\": \"ordenado por columna {columnName} en orden de bajada\",\n  \"select\": \"Seleccionar\",\n  \"selectAll\": \"Seleccionar todos\",\n  \"sortable\": \"columna ordenable\"\n}\n","{\n  \"ascending\": \"tõusev järjestus\",\n  \"ascendingSort\": \"sorditud veeru järgi {columnName} tõusvas järjestuses\",\n  \"columnSize\": \"{value} pikslit\",\n  \"descending\": \"laskuv järjestus\",\n  \"descendingSort\": \"sorditud veeru järgi {columnName} laskuvas järjestuses\",\n  \"select\": \"Vali\",\n  \"selectAll\": \"Vali kõik\",\n  \"sortable\": \"sorditav veerg\"\n}\n","{\n  \"ascending\": \"nouseva\",\n  \"ascendingSort\": \"lajiteltu sarakkeen {columnName} mukaan nousevassa järjestyksessä\",\n  \"columnSize\": \"{value} pikseliä\",\n  \"descending\": \"laskeva\",\n  \"descendingSort\": \"lajiteltu sarakkeen {columnName} mukaan laskevassa järjestyksessä\",\n  \"select\": \"Valitse\",\n  \"selectAll\": \"Valitse kaikki\",\n  \"sortable\": \"lajiteltava sarake\"\n}\n","{\n  \"ascending\": \"croissant\",\n  \"ascendingSort\": \"trié en fonction de la colonne {columnName} par ordre croissant\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"décroissant\",\n  \"descendingSort\": \"trié en fonction de la colonne {columnName} par ordre décroissant\",\n  \"select\": \"Sélectionner\",\n  \"selectAll\": \"Sélectionner tout\",\n  \"sortable\": \"colonne triable\"\n}\n","{\n  \"ascending\": \"עולה\",\n  \"ascendingSort\": \"מוין לפי עמודה {columnName} בסדר עולה\",\n  \"columnSize\": \"{value} פיקסלים\",\n  \"descending\": \"יורד\",\n  \"descendingSort\": \"מוין לפי עמודה {columnName} בסדר יורד\",\n  \"select\": \"בחר\",\n  \"selectAll\": \"בחר הכול\",\n  \"sortable\": \"עמודה שניתן למיין\"\n}\n","{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"razvrstano po stupcima {columnName} rastućem redoslijedom\",\n  \"columnSize\": \"{value} piksela\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"razvrstano po stupcima {columnName} padajućim redoslijedom\",\n  \"select\": \"Odaberite\",\n  \"selectAll\": \"Odaberite sve\",\n  \"sortable\": \"stupac koji se može razvrstati\"\n}\n","{\n  \"ascending\": \"növekvő\",\n  \"ascendingSort\": \"rendezve a(z) {columnName} oszlop szerint, növekvő sorrendben\",\n  \"columnSize\": \"{value} képpont\",\n  \"descending\": \"csökkenő\",\n  \"descendingSort\": \"rendezve a(z) {columnName} oszlop szerint, csökkenő sorrendben\",\n  \"select\": \"Kijelölés\",\n  \"selectAll\": \"Összes kijelölése\",\n  \"sortable\": \"rendezendő oszlop\"\n}\n","{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"in ordine crescente in base alla colonna {columnName}\",\n  \"columnSize\": \"{value} pixel\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"in ordine decrescente in base alla colonna {columnName}\",\n  \"select\": \"Seleziona\",\n  \"selectAll\": \"Seleziona tutto\",\n  \"sortable\": \"colonna ordinabile\"\n}\n","{\n  \"ascending\": \"昇順\",\n  \"ascendingSort\": \"列 {columnName} を昇順で並べ替え\",\n  \"columnSize\": \"{value} ピクセル\",\n  \"descending\": \"降順\",\n  \"descendingSort\": \"列 {columnName} を降順で並べ替え\",\n  \"select\": \"選択\",\n  \"selectAll\": \"すべて選択\",\n  \"sortable\": \"並べ替え可能な列\"\n}\n","{\n  \"ascending\": \"오름차순\",\n  \"ascendingSort\": \"{columnName} 열을 기준으로 오름차순으로 정렬됨\",\n  \"columnSize\": \"{value} 픽셀\",\n  \"descending\": \"내림차순\",\n  \"descendingSort\": \"{columnName} 열을 기준으로 내림차순으로 정렬됨\",\n  \"select\": \"선택\",\n  \"selectAll\": \"모두 선택\",\n  \"sortable\": \"정렬 가능한 열\"\n}\n","{\n  \"ascending\": \"didėjančia tvarka\",\n  \"ascendingSort\": \"surikiuota pagal stulpelį {columnName} didėjančia tvarka\",\n  \"columnSize\": \"{value} piks.\",\n  \"descending\": \"mažėjančia tvarka\",\n  \"descendingSort\": \"surikiuota pagal stulpelį {columnName} mažėjančia tvarka\",\n  \"select\": \"Pasirinkti\",\n  \"selectAll\": \"Pasirinkti viską\",\n  \"sortable\": \"rikiuojamas stulpelis\"\n}\n","{\n  \"ascending\": \"augošā secībā\",\n  \"ascendingSort\": \"kārtots pēc kolonnas {columnName} augošā secībā\",\n  \"columnSize\": \"{value} pikseļi\",\n  \"descending\": \"dilstošā secībā\",\n  \"descendingSort\": \"kārtots pēc kolonnas {columnName} dilstošā secībā\",\n  \"select\": \"Atlasīt\",\n  \"selectAll\": \"Atlasīt visu\",\n  \"sortable\": \"kārtojamā kolonna\"\n}\n","{\n  \"ascending\": \"stigende\",\n  \"ascendingSort\": \"sortert etter kolonne {columnName} i stigende rekkefølge\",\n  \"columnSize\": \"{value} piksler\",\n  \"descending\": \"synkende\",\n  \"descendingSort\": \"sortert etter kolonne {columnName} i synkende rekkefølge\",\n  \"select\": \"Velg\",\n  \"selectAll\": \"Velg alle\",\n  \"sortable\": \"kolonne som kan sorteres\"\n}\n","{\n  \"ascending\": \"oplopend\",\n  \"ascendingSort\": \"gesorteerd in oplopende volgorde in kolom {columnName}\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"aflopend\",\n  \"descendingSort\": \"gesorteerd in aflopende volgorde in kolom {columnName}\",\n  \"select\": \"Selecteren\",\n  \"selectAll\": \"Alles selecteren\",\n  \"sortable\": \"sorteerbare kolom\"\n}\n","{\n  \"ascending\": \"rosnąco\",\n  \"ascendingSort\": \"posortowano według kolumny {columnName} w porządku rosnącym\",\n  \"columnSize\": \"Liczba pikseli: {value}\",\n  \"descending\": \"malejąco\",\n  \"descendingSort\": \"posortowano według kolumny {columnName} w porządku malejącym\",\n  \"select\": \"Zaznacz\",\n  \"selectAll\": \"Zaznacz wszystko\",\n  \"sortable\": \"kolumna z możliwością sortowania\"\n}\n","{\n  \"ascending\": \"crescente\",\n  \"ascendingSort\": \"classificado pela coluna {columnName} em ordem crescente\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"decrescente\",\n  \"descendingSort\": \"classificado pela coluna {columnName} em ordem decrescente\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"coluna classificável\"\n}\n","{\n  \"ascending\": \"ascendente\",\n  \"ascendingSort\": \"Ordenar por coluna {columnName} em ordem ascendente\",\n  \"columnSize\": \"{value} pixels\",\n  \"descending\": \"descendente\",\n  \"descendingSort\": \"Ordenar por coluna {columnName} em ordem descendente\",\n  \"select\": \"Selecionar\",\n  \"selectAll\": \"Selecionar tudo\",\n  \"sortable\": \"Coluna ordenável\"\n}\n","{\n  \"ascending\": \"crescătoare\",\n  \"ascendingSort\": \"sortate după coloana {columnName} în ordine crescătoare\",\n  \"columnSize\": \"{value} pixeli\",\n  \"descending\": \"descrescătoare\",\n  \"descendingSort\": \"sortate după coloana {columnName} în ordine descrescătoare\",\n  \"select\": \"Selectare\",\n  \"selectAll\": \"Selectare totală\",\n  \"sortable\": \"coloană sortabilă\"\n}\n","{\n  \"ascending\": \"возрастание\",\n  \"ascendingSort\": \"сортировать столбец {columnName} в порядке возрастания\",\n  \"columnSize\": \"{value} пикс.\",\n  \"descending\": \"убывание\",\n  \"descendingSort\": \"сортировать столбец {columnName} в порядке убывания\",\n  \"select\": \"Выбрать\",\n  \"selectAll\": \"Выбрать все\",\n  \"sortable\": \"сортируемый столбец\"\n}\n","{\n  \"ascending\": \"vzostupne\",\n  \"ascendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"columnSize\": \"Počet pixelov: {value}\",\n  \"descending\": \"zostupne\",\n  \"descendingSort\": \"zoradené zostupne podľa stĺpca {columnName}\",\n  \"select\": \"Vybrať\",\n  \"selectAll\": \"Vybrať všetko\",\n  \"sortable\": \"zoraditeľný stĺpec\"\n}\n","{\n  \"ascending\": \"naraščajoče\",\n  \"ascendingSort\": \"razvrščeno po stolpcu {columnName} v naraščajočem vrstnem redu\",\n  \"columnSize\": \"{value} slikovnih pik\",\n  \"descending\": \"padajoče\",\n  \"descendingSort\": \"razvrščeno po stolpcu {columnName} v padajočem vrstnem redu\",\n  \"select\": \"Izberite\",\n  \"selectAll\": \"Izberite vse\",\n  \"sortable\": \"razvrstljivi stolpec\"\n}\n","{\n  \"ascending\": \"rastući\",\n  \"ascendingSort\": \"sortirano po kolonama {columnName} rastućim redosledom\",\n  \"descending\": \"padajući\",\n  \"descendingSort\": \"sortirano po kolonama {columnName} padajućim redosledom\",\n  \"select\": \"Izaberite\",\n  \"selectAll\": \"Izaberite sve\",\n  \"sortable\": \"kolona koja se može sortirati\"\n}\n","{\n  \"ascending\": \"stigande\",\n  \"ascendingSort\": \"sorterat på kolumn {columnName} i stigande ordning\",\n  \"columnSize\": \"{value} pixlar\",\n  \"descending\": \"fallande\",\n  \"descendingSort\": \"sorterat på kolumn {columnName} i fallande ordning\",\n  \"select\": \"Markera\",\n  \"selectAll\": \"Markera allt\",\n  \"sortable\": \"sorterbar kolumn\"\n}\n","{\n  \"ascending\": \"artan sırada\",\n  \"ascendingSort\": \"{columnName} sütuna göre artan düzende sırala\",\n  \"columnSize\": \"{value} piksel\",\n  \"descending\": \"azalan sırada\",\n  \"descendingSort\": \"{columnName} sütuna göre azalan düzende sırala\",\n  \"select\": \"Seç\",\n  \"selectAll\": \"Tümünü Seç\",\n  \"sortable\": \"Sıralanabilir sütun\"\n}\n","{\n  \"ascending\": \"висхідний\",\n  \"ascendingSort\": \"відсортовано за стовпцем {columnName} у висхідному порядку\",\n  \"columnSize\": \"{value} пікс.\",\n  \"descending\": \"низхідний\",\n  \"descendingSort\": \"відсортовано за стовпцем {columnName} у низхідному порядку\",\n  \"select\": \"Вибрати\",\n  \"selectAll\": \"Вибрати все\",\n  \"sortable\": \"сортувальний стовпець\"\n}\n","{\n  \"ascending\": \"升序\",\n  \"ascendingSort\": \"按列 {columnName} 升序排序\",\n  \"columnSize\": \"{value} 像素\",\n  \"descending\": \"降序\",\n  \"descendingSort\": \"按列 {columnName} 降序排序\",\n  \"select\": \"选择\",\n  \"selectAll\": \"全选\",\n  \"sortable\": \"可排序的列\"\n}\n","{\n  \"ascending\": \"遞增\",\n  \"ascendingSort\": \"已依據「{columnName}」欄遞增排序\",\n  \"columnSize\": \"{value} 像素\",\n  \"descending\": \"遞減\",\n  \"descendingSort\": \"已依據「{columnName}」欄遞減排序\",\n  \"select\": \"選取\",\n  \"selectAll\": \"全選\",\n  \"sortable\": \"可排序的欄\"\n}\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {GridKeyboardDelegate} from '@react-aria/grid';\nimport {Key} from 'react';\nimport {Node} from '@react-types/shared';\nimport {TableCollection} from '@react-types/table';\n\nexport class TableKeyboardDelegate<T> extends GridKeyboardDelegate<T, TableCollection<T>> {\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell' || node.type === 'rowheader' || node.type === 'column';\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a column, then focus the first child column if any,\n    // or find the corresponding cell in the first row.\n    if (startItem.type === 'column') {\n      let child = [...startItem.childNodes][0];\n      if (child) {\n        return child.key;\n      }\n\n      let firstKey = this.getFirstKey();\n      if (firstKey == null) {\n        return;\n      }\n\n      let firstItem = this.collection.getItem(firstKey);\n      return [...firstItem.childNodes][startItem.index].key;\n    }\n\n    return super.getKeyBelow(key);\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a column, focus the parent column if any\n    if (startItem.type === 'column') {\n      let parent = this.collection.getItem(startItem.parentKey);\n      if (parent && parent.type === 'column') {\n        return parent.key;\n      }\n\n      return;\n    }\n\n    // only return above row key if not header row\n    let superKey = super.getKeyAbove(key);\n    if (superKey != null && this.collection.getItem(superKey).type !== 'headerrow') {\n      return superKey;\n    }\n\n    // If no item was found, and focus was on a cell, then focus the\n    // corresponding column header.\n    if (this.isCell(startItem)) {\n      return this.collection.columns[startItem.index].key;\n    }\n\n    // If focus was on a row, then focus the first column header.\n    return this.collection.columns[0].key;\n  }\n\n  private findNextColumnKey(column: Node<T>) {\n    // Search following columns\n    let key = this.findNextKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the first column\n    let row = this.collection.headerRows[column.level];\n    for (let item of row.childNodes) {\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n  }\n\n  private findPreviousColumnKey(column: Node<T>) {\n    // Search previous columns\n    let key = this.findPreviousKey(column.key, item => item.type === 'column');\n    if (key != null) {\n      return key;\n    }\n\n    // Wrap around to the last column\n    let row = this.collection.headerRows[column.level];\n    let childNodes = [...row.childNodes];\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      let item = childNodes[i];\n      if (item.type === 'column') {\n        return item.key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus was on a column, then focus the next column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findPreviousColumnKey(item)\n        : this.findNextColumnKey(item);\n    }\n\n    return super.getKeyRightOf(key);\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus was on a column, then focus the previous column\n    if (item.type === 'column') {\n      return this.direction === 'rtl'\n        ? this.findNextColumnKey(item)\n        : this.findPreviousColumnKey(item);\n    }\n\n    return super.getKeyLeftOf(key);\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n    if (key == null) {\n      return null;\n    }\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // Check each of the row header cells in this row for a match\n      for (let cell of item.childNodes) {\n        let column = collection.columns[cell.index];\n        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {\n          let substring = cell.textValue.slice(0, search.length);\n          if (this.collator.compare(substring, search) === 0) {\n            // If we started on a cell, end on the matching cell. Otherwise, end on the row.\n            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;\n            return fromItem.type === 'cell'\n              ? cell.key\n              : item.key;\n          }\n        }\n      }\n\n      key = this.getKeyBelow(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {getColumnHeaderId} from './utils';\nimport {GridNode} from '@react-types/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {isAndroid, mergeProps, useDescription} from '@react-aria/utils';\nimport {RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useFocusable} from '@react-aria/focus';\nimport {useGridCell} from '@react-aria/grid';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface AriaTableColumnHeaderProps {\n  /** An object representing the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader). Contains all the relevant information that makes up the column header. */\n  node: GridNode<unknown>,\n  /** Whether the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the column has a menu in the header, this changes interactions with the header.\n   * @private\n  */\n  hasMenu?: boolean\n}\n\nexport interface TableColumnHeaderAria {\n  /** Props for the [column header](https://www.w3.org/TR/wai-aria-1.1/#columnheader) element. */\n  columnHeaderProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a column header in a table.\n * @param props - Props for the column header.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the column header element.\n */\nexport function useTableColumnHeader<T>(props: AriaTableColumnHeaderProps, state: TableState<T>, ref: RefObject<FocusableElement>): TableColumnHeaderAria {\n  let {node} = props;\n  let allowsSorting = node.props.allowsSorting;\n  // the selection cell column header needs to focus the checkbox within it but the other columns should focus the cell so that focus doesn't land on the resizer\n  let {gridCellProps} = useGridCell({...props, focusMode: node.props.isSelectionCell || props.hasMenu || node.props.allowsSorting ? 'child' : 'cell'}, state, ref);\n\n  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === 'single';\n\n  let {pressProps} = usePress({\n    isDisabled: !allowsSorting || isSelectionCellDisabled,\n    onPress() {\n      state.sort(node.key);\n    },\n    ref\n  });\n\n  // Needed to pick up the focusable context, enabling things like Tooltips for example\n  let {focusableProps} = useFocusable({}, ref);\n\n  if (props.hasMenu) {\n    pressProps = {};\n  }\n\n  let ariaSort: DOMAttributes['aria-sort'] = null;\n  let isSortedColumn = state.sortDescriptor?.column === node.key;\n  let sortDirection = state.sortDescriptor?.direction;\n  // aria-sort not supported in Android Talkback\n  if (node.props.allowsSorting && !isAndroid()) {\n    ariaSort = isSortedColumn ? sortDirection : 'none';\n  }\n\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let sortDescription;\n  if (allowsSorting) {\n    sortDescription = `${stringFormatter.format('sortable')}`;\n    // Android Talkback doesn't support aria-sort so we add sort order details to the aria-described by here\n    if (isSortedColumn && sortDirection && isAndroid()) {\n      sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;\n    }\n  }\n\n  let descriptionProps = useDescription(sortDescription);\n\n  return {\n    columnHeaderProps: {\n      ...mergeProps(\n        gridCellProps,\n        pressProps,\n        focusableProps,\n        descriptionProps,\n        // If the table is empty, make all column headers untabbable or programatically focusable\n        state.collection.size === 0 && {tabIndex: null}\n      ),\n      role: 'columnheader',\n      id: getColumnHeaderId(state, node.key),\n      'aria-colspan': node.colspan && node.colspan > 1 ? node.colspan : null,\n      'aria-sort': ariaSort\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusableElement} from '@react-types/shared';\nimport {getRowLabelledBy} from './utils';\nimport {GridRowAria, GridRowProps, useGridRow} from '@react-aria/grid';\nimport {RefObject} from 'react';\nimport {TableCollection} from '@react-types/table';\nimport {TableState} from '@react-stately/table';\n\n/**\n * Provides the behavior and accessibility implementation for a row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableRow<T>(props: GridRowProps<T>, state: TableState<T>, ref: RefObject<FocusableElement>): GridRowAria {\n  let {node} = props;\n  let {rowProps, isPressed} = useGridRow<T, TableCollection<T>, TableState<T>>(props, state, ref);\n  return {\n    rowProps: {\n      ...rowProps,\n      'aria-labelledby': getRowLabelledBy(state, node.key)\n    },\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {GridRowProps} from '@react-aria/grid';\nimport {RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\n\nexport interface TableHeaderRowAria {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a header row in a table.\n * @param props - Props for the row.\n * @param state - State of the table, as returned by `useTableState`.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function useTableHeaderRow<T>(props: GridRowProps<T>, state: TableState<T>, ref: RefObject<Element>): TableHeaderRowAria {\n  let {node, isVirtualized} = props;\n  let rowProps = {\n    role: 'row'\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {getCellId} from './utils';\nimport {GridNode} from '@react-types/grid';\nimport {RefObject} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useGridCell} from '@react-aria/grid';\n\nexport interface AriaTableCellProps {\n  /** An object representing the table cell. Contains all the relevant information that makes up the row header. */\n  node: GridNode<unknown>,\n  /** Whether the cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface TableCellAria {\n  /** Props for the table cell element. */\n  gridCellProps: DOMAttributes,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a table.\n * @param props - Props for the cell.\n * @param state - State of the table, as returned by `useTableState`.\n * @param ref - The ref attached to the cell element.\n */\nexport function useTableCell<T>(props: AriaTableCellProps, state: TableState<T>, ref: RefObject<FocusableElement>): TableCellAria {\n  let {gridCellProps, isPressed} = useGridCell(props, state, ref);\n\n  let columnKey = props.node.column.key;\n  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {\n    gridCellProps.role = 'rowheader';\n    gridCellProps.id = getCellId(state, props.node.parentKey, columnKey);\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaCheckboxProps} from '@react-types/checkbox';\nimport {getRowLabelledBy} from './utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from 'react';\nimport {TableState} from '@react-stately/table';\nimport {useGridSelectionCheckbox} from '@react-aria/grid';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaTableSelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\nexport interface TableSelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\nexport interface TableSelectAllCheckboxAria {\n  /** Props for the select all checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a table.\n * @param props - Props for the selection checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectionCheckbox<T>(props: AriaTableSelectionCheckboxProps, state: TableState<T>): TableSelectionCheckboxAria {\n  let {key} = props;\n  const {checkboxProps} = useGridSelectionCheckbox(props, state);\n\n  return {\n    checkboxProps: {\n      ...checkboxProps,\n      'aria-labelledby': `${checkboxProps.id} ${getRowLabelledBy(state, key)}`\n    }\n  };\n}\n\n/**\n * Provides the behavior and accessibility implementation for the select all checkbox in a table.\n * @param props - Props for the select all checkbox.\n * @param state - State of the table, as returned by `useTableState`.\n */\nexport function useTableSelectAllCheckbox<T>(state: TableState<T>): TableSelectAllCheckboxAria {\n  let {isEmpty, isSelectAll, selectionMode} = state.selectionManager;\n  const stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  return {\n    checkboxProps: {\n      'aria-label': stringFormatter.format(selectionMode === 'single' ? 'select' : 'selectAll'),\n      isSelected: isSelectAll,\n      isDisabled: selectionMode !== 'multiple' || state.collection.size === 0,\n      isIndeterminate: !isEmpty && !isSelectAll,\n      onChange: () => state.selectionManager.toggleSelectAll()\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ChangeEvent, RefObject, useCallback, useRef} from 'react';\nimport {DOMAttributes, MoveEndEvent, MoveMoveEvent} from '@react-types/shared';\nimport {focusSafely} from '@react-aria/focus';\nimport {focusWithoutScrolling, mergeProps, useId} from '@react-aria/utils';\nimport {getColumnHeaderId} from './utils';\nimport {GridNode} from '@react-types/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {TableColumnResizeState, TableState} from '@react-stately/table';\nimport {useKeyboard, useMove, usePress} from '@react-aria/interactions';\nimport {useLocale, useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface TableColumnResizeAria {\n  inputProps: DOMAttributes,\n  resizerProps: DOMAttributes\n}\n\nexport interface AriaTableColumnResizeProps<T> {\n  column: GridNode<T>,\n  label: string,\n  triggerRef: RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  onMove: (e: MoveMoveEvent) => void,\n  onMoveEnd: (e: MoveEndEvent) => void\n}\n\nexport function useTableColumnResize<T>(props: AriaTableColumnResizeProps<T>, state: TableState<T>, columnState: TableColumnResizeState<T>, ref: RefObject<HTMLInputElement>): TableColumnResizeAria {\n  let {column: item, triggerRef, isDisabled} = props;\n  const stateRef = useRef<TableColumnResizeState<T>>(null);\n  stateRef.current = columnState;\n  const stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let id = useId();\n\n  let {direction} = useLocale();\n  let {keyboardProps} = useKeyboard({\n    onKeyDown: (e) => {\n      if (e.key === 'Escape' || e.key === 'Enter' || e.key === ' ' || e.key === 'Tab') {\n        e.preventDefault();\n        // switch focus back to the column header on anything that ends edit mode\n        focusSafely(triggerRef.current);\n      }\n    }\n  });\n\n  const columnResizeWidthRef = useRef<number>(0);\n  const {moveProps} = useMove({\n    onMoveStart() {\n      columnResizeWidthRef.current = stateRef.current.getColumnWidth(item.key);\n      stateRef.current.onColumnResizeStart(item);\n    },\n    onMove(e) {\n      let {deltaX, deltaY, pointerType} = e;\n      if (direction === 'rtl') {\n        deltaX *= -1;\n      }\n      if (pointerType === 'keyboard') {\n        if (deltaY !== 0 && deltaX === 0) {\n          deltaX = deltaY * -1;\n        }\n        deltaX *= 10;\n      }\n      // if moving up/down only, no need to resize\n      if (deltaX !== 0) {\n        columnResizeWidthRef.current += deltaX;\n        stateRef.current.onColumnResize(item, columnResizeWidthRef.current);\n        props.onMove(e);\n      }\n    },\n    onMoveEnd(e) {\n      let {pointerType} = e;\n      columnResizeWidthRef.current = 0;\n      props.onMoveEnd(e);\n      if (pointerType === 'mouse') {\n        stateRef.current.onColumnResizeEnd(item);\n      }\n    }\n  });\n  let min = Math.floor(stateRef.current.getColumnMinWidth(item.key));\n  let max = Math.floor(stateRef.current.getColumnMaxWidth(item.key));\n  if (max === Infinity) {\n    max = Number.MAX_SAFE_INTEGER;\n  }\n  let value = Math.floor(stateRef.current.getColumnWidth(item.key));\n\n  let ariaProps = {\n    'aria-label': props.label,\n    'aria-orientation': 'horizontal' as 'horizontal',\n    'aria-labelledby': `${id} ${getColumnHeaderId(state, item.key)}`,\n    'aria-valuetext': stringFormatter.format('columnSize', {value}),\n    min,\n    max,\n    value\n  };\n\n  const focusInput = useCallback(() => {\n    if (ref.current) {\n      focusWithoutScrolling(ref.current);\n    }\n  }, [ref]);\n\n  let onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    let currentWidth = stateRef.current.getColumnWidth(item.key);\n    let nextValue = parseFloat(e.target.value);\n\n    if (nextValue > currentWidth) {\n      nextValue = currentWidth + 10;\n    } else {\n      nextValue = currentWidth - 10;\n    }\n    stateRef.current.onColumnResize(item, nextValue);\n  };\n\n  let {pressProps} = usePress({\n    onPressStart: (e) => {\n      if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey || e.pointerType === 'keyboard') {\n        return;\n      }\n      if (e.pointerType === 'virtual' && columnState.currentlyResizingColumn != null) {\n        stateRef.current.onColumnResizeEnd(item);\n        focusSafely(triggerRef.current);\n        return;\n      }\n      focusInput();\n    },\n    onPress: (e) => {\n      if (e.pointerType === 'touch') {\n        focusInput();\n      } else if (e.pointerType !== 'virtual') {\n        focusSafely(triggerRef.current);\n      }\n    }\n  });\n\n  return {\n    resizerProps: mergeProps(\n      keyboardProps,\n      moveProps,\n      pressProps\n    ),\n    inputProps: mergeProps(\n      {\n        id,\n        onFocus: () => {\n          // useMove calls onMoveStart for every keypress, but we want resize start to only be called when we start resize mode\n          // call instead during focus and blur\n          stateRef.current.onColumnResizeStart(item);\n          state.setKeyboardNavigationDisabled(true);\n        },\n        onBlur: () => {\n          stateRef.current.onColumnResizeEnd(item);\n          state.setKeyboardNavigationDisabled(false);\n        },\n        onChange,\n        disabled: isDisabled\n      },\n      ariaProps\n    )\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}