{"ast":null,"code":"import { mergeProps as $7CUUz$mergeProps, filterDOMProps as $7CUUz$filterDOMProps } from \"@react-aria/utils\";\nimport { useFocusable as $7CUUz$useFocusable } from \"@react-aria/focus\";\nimport { usePress as $7CUUz$usePress } from \"@react-aria/interactions\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\n\nfunction $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {\n  let {\n    isDisabled = false,\n    isRequired = false,\n    isReadOnly = false,\n    value: value,\n    name: name,\n    children: children,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    validationState = \"valid\"\n  } = props;\n  let onChange = e => {\n    // since we spread props on label, onChange will end up there as well as in here.\n    // so we have to stop propagation at the lowest level that we care about\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) console.warn(\"If you do not provide children, you must specify an aria-label for accessibility\");\n  // This handles focusing the input on pointer down, which Safari does not do by default.\n  let {\n    pressProps: pressProps,\n    isPressed: isPressed\n  } = (0, $7CUUz$usePress)({\n    isDisabled: isDisabled\n  });\n  let {\n    focusableProps: focusableProps\n  } = (0, $7CUUz$useFocusable)(props, ref);\n  let interactions = (0, $7CUUz$mergeProps)(pressProps, focusableProps);\n  let domProps = (0, $7CUUz$filterDOMProps)(props, {\n    labelable: true\n  });\n  return {\n    inputProps: (0, $7CUUz$mergeProps)(domProps, {\n      \"aria-invalid\": validationState === \"invalid\" || undefined,\n      \"aria-errormessage\": props[\"aria-errormessage\"],\n      \"aria-controls\": props[\"aria-controls\"],\n      \"aria-readonly\": isReadOnly || undefined,\n      \"aria-required\": isRequired || undefined,\n      onChange: onChange,\n      disabled: isDisabled,\n      ...(value == null ? {} : {\n        value: value\n      }),\n      name: name,\n      type: \"checkbox\",\n      ...interactions\n    }),\n    isSelected: state.isSelected,\n    isPressed: isPressed,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  };\n}\nexport { $d2c8e2b0480f3f34$export$cbe85ee05b554577 as useToggle };","map":{"version":3,"names":["$d2c8e2b0480f3f34$export$cbe85ee05b554577","props","state","ref","isDisabled","isRequired","isReadOnly","value","name","children","ariaLabel","ariaLabelledby","validationState","onChange","e","stopPropagation","setSelected","target","checked","hasChildren","hasAriaLabel","console","warn","pressProps","isPressed","$7CUUz$usePress","focusableProps","$7CUUz$useFocusable","interactions","$7CUUz$mergeProps","domProps","$7CUUz$filterDOMProps","labelable","inputProps","undefined","disabled","type","isSelected"],"sources":["C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\toggle\\dist\\packages\\@react-aria\\toggle\\src\\index.ts","C:\\Users\\Dmitry\\Desktop\\JS\\44pract\\client\\zaebalo\\node_modules\\@react-aria\\toggle\\dist\\packages\\@react-aria\\toggle\\src\\useToggle.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useToggle} from './useToggle';\nexport type {AriaToggleProps} from '@react-types/checkbox';\nexport type {ToggleAria} from './useToggle';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaToggleProps} from '@react-types/checkbox';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {InputHTMLAttributes, RefObject} from 'react';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface ToggleAria {\n  /**\n   * Props to be spread on the input element.\n   */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the toggle is selected. */\n  isSelected: boolean,\n  /** Whether the toggle is in a pressed state. */\n  isPressed: boolean,\n  /** Whether the toggle is disabled. */\n  isDisabled: boolean,\n  /** Whether the toggle is read only. */\n  isReadOnly: boolean\n}\n\n/**\n * Handles interactions for toggle elements, e.g. Checkboxes and Switches.\n */\nexport function useToggle(props: AriaToggleProps, state: ToggleState, ref: RefObject<HTMLInputElement>): ToggleAria {\n  let {\n    isDisabled = false,\n    isRequired = false,\n    isReadOnly = false,\n    value,\n    name,\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    validationState = 'valid'\n  } = props;\n\n  let onChange = (e) => {\n    // since we spread props on label, onChange will end up there as well as in here.\n    // so we have to stop propagation at the lowest level that we care about\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n\n  // This handles focusing the input on pointer down, which Safari does not do by default.\n  let {pressProps, isPressed} = usePress({\n    isDisabled\n  });\n\n  let {focusableProps} = useFocusable(props, ref);\n  let interactions = mergeProps(pressProps, focusableProps);\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  return {\n    inputProps: mergeProps(domProps, {\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-controls': props['aria-controls'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      onChange,\n      disabled: isDisabled,\n      ...(value == null ? {} : {value}),\n      name,\n      type: 'checkbox',\n      ...interactions\n    }),\n    isSelected: state.isSelected,\n    isPressed,\n    isDisabled,\n    isReadOnly\n  };\n}\n"],"mappings":";;;;AAAA;;;;;;;;;;ACAA,GDAA,CCAA;;;;;;;;;;;;AAqCO,SAASA,0CAAUC,KAAsB,EAAEC,KAAkB,EAAEC,GAAgC,EAAc;EAClH,IAAI;IACFC,UAAA,GAAa,KAAK;IAClBC,UAAA,GAAa,KAAK;IAClBC,UAAA,GAAa,KAAK;IAAAC,KAAA,EAClBA,KAAA;IAAKC,IAAA,EACLA,IAAA;IAAIC,QAAA,EACJA,QAAA;IACA,cAAcC,SAAA;IACd,mBAAmBC,cAAA;IACnBC,eAAA,GAAkB;EAAA,CACnB,GAAGX,KAAA;EAEJ,IAAIY,QAAA,GAAYC,CAAA,IAAM;IACpB;IACA;IACAA,CAAA,CAAEC,eAAe;IACjBb,KAAA,CAAMc,WAAW,CAACF,CAAA,CAAEG,MAAM,CAACC,OAAO;EACpC;EAEA,IAAIC,WAAA,GAAcV,QAAA,IAAY,IAAI;EAClC,IAAIW,YAAA,GAAeV,SAAA,IAAa,IAAI,IAAIC,cAAA,IAAkB,IAAI;EAC9D,IAAI,CAACQ,WAAA,IAAe,CAACC,YAAA,EACnBC,OAAA,CAAQC,IAAI,CAAC;EAGf;EACA,IAAI;IAAAC,UAAA,EAACA,UAAA;IAAUC,SAAA,EAAEA;EAAS,CAAC,GAAG,IAAAC,eAAQ,EAAC;gBACrCrB;EACF;EAEA,IAAI;IAAAsB,cAAA,EAACA;EAAc,CAAC,GAAG,IAAAC,mBAAW,EAAE1B,KAAA,EAAOE,GAAA;EAC3C,IAAIyB,YAAA,GAAe,IAAAC,iBAAS,EAAEN,UAAA,EAAYG,cAAA;EAC1C,IAAII,QAAA,GAAW,IAAAC,qBAAa,EAAE9B,KAAA,EAAO;IAAC+B,SAAA,EAAW;EAAI;EAErD,OAAO;IACLC,UAAA,EAAY,IAAAJ,iBAAU,EAACC,QAAA,EAAU;MAC/B,gBAAgBlB,eAAA,KAAoB,aAAasB,SAAA;MACjD,qBAAqBjC,KAAK,CAAC,oBAAoB;MAC/C,iBAAiBA,KAAK,CAAC,gBAAgB;MACvC,iBAAiBK,UAAA,IAAc4B,SAAA;MAC/B,iBAAiB7B,UAAA,IAAc6B,SAAA;gBAC/BrB,QAAA;MACAsB,QAAA,EAAU/B,UAAA;MACV,IAAIG,KAAA,IAAS,IAAI,GAAG,CAAC,IAAI;eAACA;MAAK,CAAC;YAChCC,IAAA;MACA4B,IAAA,EAAM;MACN,GAAGR;IACL;IACAS,UAAA,EAAYnC,KAAA,CAAMmC,UAAU;eAC5Bb,SAAA;gBACApB,UAAA;gBACAE;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}